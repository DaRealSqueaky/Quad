const pg = require('pg');
const config = require('config');
const log = require('log');

class Database {
    #pool;
    
    async init() {
        //Require i18n here otherwise we'll have a circular dependency
        const t = require("i18n").t;
        
        this.#pool = new pg.Pool(config.get("database"));
        this.#pool.on('error', (err, client) => {
            console.log(err);
        });
        try {
            let client = await this.get();
            try {
                await client.query("CREATE TABLE IF NOT EXISTS userLocales(id TEXT PRIMARY KEY, locale TEXT DEFAULT 'en')");
                await client.query("CREATE TABLE IF NOT EXISTS userPins(id TEXT PRIMARY KEY, channel TEXT, message TEXT)");
                await client.query("CREATE TABLE IF NOT EXISTS userGeography(id TEXT PRIMARY KEY, coords POINT)");
                await client.query("CREATE TABLE IF NOT EXISTS guildLocales(id TEXT PRIMARY KEY, locale TEXT DEFAULT 'en')");
                await client.query("CREATE TABLE IF NOT EXISTS guildPrefix(id TEXT PRIMARY KEY, prefix TEXT)");
                await client.query("CREATE TABLE IF NOT EXISTS guildLogs(id TEXT PRIMARY KEY, alerts TEXT, logs TEXT)");
                await client.query("CREATE TABLE IF NOT EXISTS guildPins(id TEXT PRIMARY KEY, enabled BOOLEAN, emoji TEXT, timeout INTEGER)");
                return true;
            } catch (err) {
                log(t("PostgreSQL returned errors while we were trying to create the tables."), log.error);
                return false;
            } finally {
                client.release();
            }
        } catch (err) {
            //Something happened trying to acquire a client
            log(t("Couldn't connect to the PostgreSQL server.\nCheck that the PostgreSQL server is running and that your database settings are correct."), log.error);
            return false;
        }
    }
    
    async get() {
        return await this.#pool.connect();
    }
    
    getPool() {
        return this.#pool;
    }
}

let d = new Database();
module.exports = d;