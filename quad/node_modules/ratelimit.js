const moment = require("moment");

class Ratelimit {
    #descriptors;
    #timeouts;
    
    constructor() {
        this.#descriptors = {};
        this.#timeouts = {};
    }
    
    hit(descriptor, timeout) {
        if (!this.#descriptors.hasOwnProperty(descriptor)) {
            this.#descriptors[descriptor] = 0;
            this.#timeouts[descriptor] = moment.utc().add(timeout, 'ms').valueOf();
            setTimeout(() => {
                delete this.#descriptors[descriptor];
            }, timeout);
            return 0;
        } else {
            return ++this.#descriptors[descriptor];
        }
    }
    
    timeout(descriptor) {
        return this.#timeouts[descriptor] - moment.utc().valueOf();
    }
}

let r = new Ratelimit();
module.exports = r;